---
- name: Configure domain name (Fallback - No Collections Required)
  hosts: all
  gather_facts: true
  vars:
    domain_name: "testdomain.com"
    backup_dir: "/tmp/router_backups"
    
  tasks:
    - name: Print date and time
      ansible.builtin.debug:
        msg: "Starting configuration at: {{ ansible_date_time.iso8601 }}"

    - name: Create backup directory
      ansible.builtin.file:
        path: "{{ backup_dir }}/{{ inventory_hostname }}"
        state: directory
        mode: '0755'
      delegate_to: localhost

    - name: Test SSH connectivity
      ansible.builtin.wait_for_connection:
        timeout: 30
      register: connection_test

    - name: Configure domain using raw SSH
      ansible.builtin.raw: |
        configure terminal
        ip domain name {{ domain_name }}
        exit
        copy running-config startup-config
      register: config_result
      when: connection_test is succeeded

    - name: Get running configuration
      ansible.builtin.raw: "show running-config"
      register: running_config
      when: config_result is succeeded

    - name: Save backup to file
      ansible.builtin.copy:
        content: |
          ! Configuration backup for {{ inventory_hostname }}
          ! Backup date: {{ ansible_date_time.iso8601 }}
          ! Router IP: {{ ansible_host }}
          !
          {{ running_config.stdout }}
        dest: "{{ backup_dir }}/{{ inventory_hostname }}/{{ inventory_hostname }}_{{ ansible_date_time.epoch }}.txt"
      delegate_to: localhost
      when: running_config is succeeded

    - name: Verify domain configuration
      ansible.builtin.raw: "show running-config | include domain"
      register: verify_domain
      when: config_result is succeeded

    - name: Display results
      ansible.builtin.debug:
        msg: |
          === Configuration Results ===
          Host: {{ inventory_hostname }}
          Domain: {{ domain_name }}
          Status: {{ 'SUCCESS' if config_result is succeeded else 'FAILED' }}
          Verification: {{ verify_domain.stdout | default('N/A') }}
          Backup: {{ backup_dir }}/{{ inventory_hostname }}/{{ inventory_hostname }}_{{ ansible_date_time.epoch }}.txt
          ========================
